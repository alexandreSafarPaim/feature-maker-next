name: Release & Publish

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # for npm provenance
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Test CLI functionality
      run: |
        # Testar criação de feature simples
        mkdir -p test-project/src/app
        cd test-project
        node ../bin/make-feature.js test-feature
        
        # Verificar se os arquivos foram criados
        test -f src/app/test-feature/components/TestFeature.tsx
        test -f src/app/test-feature/actions/index.ts
        test -f src/app/test-feature/'(pages)'/page.tsx
        
        echo "✅ CLI tests passed!"
        
    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
    - name: Update package.json version
      run: |
        echo "Setting version to ${{ steps.get_version.outputs.VERSION }}"
        npm version ${{ steps.get_version.outputs.VERSION }} --no-git-tag-version --allow-same-version
        
    - name: Publish to npm
      run: |
        echo "Publishing version ${{ steps.get_version.outputs.VERSION }} to npm..."
        npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        body: |
          ## Changes in v${{ steps.get_version.outputs.VERSION }}
          
          ### Features
          - CLI para gerar features no Next.js com estrutura padrão
          - Suporte a caminhos aninhados (ex: `admin/users/profile`)
          - Templates automáticos para components, pages e actions
          
          ### Installation
          ```bash
          npm install -g feature-maker-next@${{ steps.get_version.outputs.VERSION }}
          ```
          
          ### Usage
          ```bash
          feature-maker-next user-profile
          feature-maker-next admin/users/settings
          ```
          
          **Full Changelog**: https://github.com/alexandreSafarPaim/feature-maker-next/compare/v${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false